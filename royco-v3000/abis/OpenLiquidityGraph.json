[
  {
    "type": "function",
    "name": "edgeExists",
    "inputs": [
      {
        "name": "_sourceNodeHash",
        "type": "bytes32",
        "internalType": "bytes32"
      },
      {
        "name": "_targetNodeHash",
        "type": "bytes32",
        "internalType": "bytes32"
      }
    ],
    "outputs": [{ "name": "exists", "type": "bool", "internalType": "bool" }],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "getLiquidityQueries",
    "inputs": [
      {
        "name": "nodeHashes",
        "type": "bytes32[]",
        "internalType": "bytes32[]"
      }
    ],
    "outputs": [
      {
        "name": "liquidityQueries",
        "type": "tuple[]",
        "internalType": "struct Recipe[]",
        "components": [
          {
            "name": "commands",
            "type": "bytes32[]",
            "internalType": "bytes32[]"
          },
          { "name": "state", "type": "bytes[]", "internalType": "bytes[]" }
        ]
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "getLiquidityQuery",
    "inputs": [
      { "name": "nodeHash", "type": "bytes32", "internalType": "bytes32" }
    ],
    "outputs": [
      {
        "name": "liquidityQuery",
        "type": "tuple",
        "internalType": "struct Recipe",
        "components": [
          {
            "name": "commands",
            "type": "bytes32[]",
            "internalType": "bytes32[]"
          },
          { "name": "state", "type": "bytes[]", "internalType": "bytes[]" }
        ]
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "insertNode",
    "inputs": [
      { "name": "_inputToken", "type": "address", "internalType": "address" },
      {
        "name": "_depositRecipe",
        "type": "tuple",
        "internalType": "struct Recipe",
        "components": [
          {
            "name": "commands",
            "type": "bytes32[]",
            "internalType": "bytes32[]"
          },
          { "name": "state", "type": "bytes[]", "internalType": "bytes[]" }
        ]
      },
      {
        "name": "_liquidityQuery",
        "type": "tuple",
        "internalType": "struct Recipe",
        "components": [
          {
            "name": "commands",
            "type": "bytes32[]",
            "internalType": "bytes32[]"
          },
          { "name": "state", "type": "bytes[]", "internalType": "bytes[]" }
        ]
      },
      {
        "name": "_withdrawalRecipe",
        "type": "tuple",
        "internalType": "struct Recipe",
        "components": [
          {
            "name": "commands",
            "type": "bytes32[]",
            "internalType": "bytes32[]"
          },
          { "name": "state", "type": "bytes[]", "internalType": "bytes[]" }
        ]
      },
      { "name": "_outputToken", "type": "address", "internalType": "address" }
    ],
    "outputs": [
      { "name": "nodeHash", "type": "bytes32", "internalType": "bytes32" }
    ],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "nodeHashToNode",
    "inputs": [
      { "name": "nodeHash", "type": "bytes32", "internalType": "bytes32" }
    ],
    "outputs": [
      { "name": "inputToken", "type": "address", "internalType": "address" },
      {
        "name": "depositRecipe",
        "type": "tuple",
        "internalType": "struct Recipe",
        "components": [
          {
            "name": "commands",
            "type": "bytes32[]",
            "internalType": "bytes32[]"
          },
          { "name": "state", "type": "bytes[]", "internalType": "bytes[]" }
        ]
      },
      {
        "name": "liquidityQuery",
        "type": "tuple",
        "internalType": "struct Recipe",
        "components": [
          {
            "name": "commands",
            "type": "bytes32[]",
            "internalType": "bytes32[]"
          },
          { "name": "state", "type": "bytes[]", "internalType": "bytes[]" }
        ]
      },
      {
        "name": "withdrawalRecipe",
        "type": "tuple",
        "internalType": "struct Recipe",
        "components": [
          {
            "name": "commands",
            "type": "bytes32[]",
            "internalType": "bytes32[]"
          },
          { "name": "state", "type": "bytes[]", "internalType": "bytes[]" }
        ]
      },
      { "name": "outputToken", "type": "address", "internalType": "address" }
    ],
    "stateMutability": "view"
  },
  {
    "type": "event",
    "name": "NodeInserted",
    "inputs": [
      {
        "name": "nodeHash",
        "type": "bytes32",
        "indexed": true,
        "internalType": "bytes32"
      },
      {
        "name": "inputToken",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "depositRecipe",
        "type": "tuple",
        "indexed": false,
        "internalType": "struct Recipe",
        "components": [
          {
            "name": "commands",
            "type": "bytes32[]",
            "internalType": "bytes32[]"
          },
          { "name": "state", "type": "bytes[]", "internalType": "bytes[]" }
        ]
      },
      {
        "name": "liquidityQuery",
        "type": "tuple",
        "indexed": false,
        "internalType": "struct Recipe",
        "components": [
          {
            "name": "commands",
            "type": "bytes32[]",
            "internalType": "bytes32[]"
          },
          { "name": "state", "type": "bytes[]", "internalType": "bytes[]" }
        ]
      },
      {
        "name": "withdrawalRecipe",
        "type": "tuple",
        "indexed": false,
        "internalType": "struct Recipe",
        "components": [
          {
            "name": "commands",
            "type": "bytes32[]",
            "internalType": "bytes32[]"
          },
          { "name": "state", "type": "bytes[]", "internalType": "bytes[]" }
        ]
      },
      {
        "name": "outputToken",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      }
    ],
    "anonymous": false
  },
  { "type": "error", "name": "InvalidInputToken", "inputs": [] },
  { "type": "error", "name": "NodeAlreadyExists", "inputs": [] }
]
