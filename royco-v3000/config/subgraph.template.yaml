specVersion: 1.3.0
indexerHints:
  prune: auto
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum
    name: RoycoAccountFactory
    network: {{network}}
    source:
      address: "{{roycoAccountFactoryAddress}}"
      abi: RoycoAccountFactory
      startBlock: {{roycoAccountFactoryStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      entities:
        - RoycoAccountDeployed
        - RawSafe
        - RawSafeMap
      abis:
        - name: RoycoAccountFactory
          file: ./abis/RoycoAccountFactory.json
        - name: ISafe
          file: ./abis/ISafe.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: RoycoAccountDeployed(indexed address,uint96,address)
          handler: handleRoycoAccountDeployed
      file: ./src/royco-account-factory.ts
  - kind: ethereum
    name: ERC20
    network: {{network}}
    source:
      abi: ERC20
      startBlock: {{roycoAccountFactoryStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      entities:
        - RawSafeTokenizedPosition
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
      file: ./src/erc20.ts
  - kind: ethereum
    name: Royco
    network: {{network}}
    source:
      address: "{{roycoAccountFactoryAddress}}"
      abi: Royco
      startBlock: {{roycoAccountFactoryStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      entities:
        - NodeInserted
        - MarketCreated
        - CancelledOrder
        - RawNode
        - RawMarket
        - RawOrder
        - RawOrderFill
        - RawOperand
        - RawCondition
      abis:
        - name: Royco
          file: ./abis/Royco.json
        - name: OpenLiquidityGraph
          file: ./abis/OpenLiquidityGraph.json
        - name: Marketplace
          file: ./abis/Marketplace.json
        - name: OrderProcessor
          file: ./abis/OrderProcessor.json
      eventHandlers:
        - event: NodeInserted(indexed bytes32,indexed address,(bytes32[],bytes[]),(bytes32[],bytes[]),(bytes32[],bytes[]),indexed address)
          handler: handleNodeInserted
        - event: MarketCreated(indexed bytes32,indexed address,bytes)
          handler: handleMarketCreated
        - event: CancelledOrder(bytes32)
          handler: handleCancelledOrder
      callHandlers:
        - function: fillOrder((address,address,bytes32,uint8,(address,bytes),bool,bytes,uint256,address,uint40,address,bytes,((address,bytes),uint8,(address,bytes))[],((address,bytes),uint8,(address,bytes))[],bytes),uint256)
          handler: handleFillOrder
        - function: cancelOrder((address,address,bytes32,uint8,(address,bytes),bool,bytes,uint256,address,uint40,address,bytes,((address,bytes),uint8,(address,bytes))[],((address,bytes),uint8,(address,bytes))[],bytes),bytes)
          handler: handleCancelOrder
      file: ./src/royco.ts
templates:
  - name: SafeTemplate
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: ISafe
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      entities:
        - SafeSetup
        - ExecutionSuccess
        - ExecutionFailure
        - SafeReceived
        - RawSafe
        - RawSafeMap
        - RawSafeTokenizedPosition
        - RawSafeTransaction
      abis:
        - name: ISafe
          file: ./abis/ISafe.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: SafeSetup(indexed address,address[],uint256,address,address)
          handler: handleSafeSetup
        - event: ExecutionSuccess(indexed bytes32,uint256)
          handler: handleExecutionSuccess
        - event: ExecutionFailure(indexed bytes32,uint256)
          handler: handleExecutionFailure
        - event: AddedOwner(indexed address)
          handler: handleAddedOwner
        - event: RemovedOwner(indexed address)
          handler: handleRemovedOwner
        - event: ChangedThreshold(uint256)
          handler: handleChangedThreshold
        - event: SafeReceived(indexed address,uint256)
          handler: handleSafeReceived
      callHandlers:
        - function: execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes)
          handler: handleExecTransaction
      file: ./src/safe.ts