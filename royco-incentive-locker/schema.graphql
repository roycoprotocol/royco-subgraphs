type Award @entity(immutable: true) {
  id: String!
  pointsId: String! # address
  recipient: String! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: String!
}

type CoIPsAdded @entity(immutable: true) {
  id: String!
  incentiveCampaignId: String! # bytes32
  coIPs: [String!]! # address[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: String!
}

type CoIPsRemoved @entity(immutable: true) {
  id: String!
  incentiveCampaignId: String! # bytes32
  coIPs: [String!]! # address[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: String!
}

type DefaultProtocolFeeClaimantSet @entity(immutable: true) {
  id: String!
  newDefaultProtocolFeeClaimant: String! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: String!
}

type DefaultProtocolFeeSet @entity(immutable: true) {
  id: String!
  newDefaultProtocolFee: BigInt! # uint64
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: String!
}

type FeesClaimed @entity(immutable: true) {
  id: String!
  claimant: String! # address
  incentive: String! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: String!
}

type IncentiveCampaignCreated @entity(immutable: true) {
  id: String!
  incentiveCampaignId: String! # bytes32
  ip: String! # address
  actionVerifier: String! # address
  actionParams: String! # bytes
  defaultProtocolFee: BigInt! # uint64
  incentivesOffered: [String!]! # address[]
  incentiveAmountsOffered: [BigInt!]! # uint256[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: String!
}

type IncentivesAdded @entity(immutable: true) {
  id: String!
  incentiveCampaignId: String! # bytes32
  ip: String! # address
  incentivesOffered: [String!]! # address[]
  incentiveAmountsOffered: [BigInt!]! # uint256[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: String!
}

type IncentivesClaimed @entity(immutable: true) {
  id: String!
  incentiveCampaignId: String! # bytes32
  ap: String! # address
  incentiveAmountsPaid: [BigInt!]! # uint256[]
  protocolFeesPaid: [BigInt!]! # uint256[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: String!
}

type IncentivesRemoved @entity(immutable: true) {
  id: String!
  incentiveCampaignId: String! # bytes32
  ip: String! # address
  incentivesRemoved: [String!]! # address[]
  incentiveAmountsRemoved: [BigInt!]! # uint256[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: String!
}

type OwnershipTransferStarted @entity(immutable: true) {
  id: String!
  previousOwner: String! # address
  newOwner: String! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: String!
}

type OwnershipTransferred @entity(immutable: true) {
  id: String!
  previousOwner: String! # address
  newOwner: String! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: String!
}

type PointsProgramCreated @entity(immutable: true) {
  id: String!
  pointsId: String! # address
  owner: String! # address
  name: String! # string
  symbol: String! # string
  decimals: Int! # uint8
  whitelistedIPs: [String!]! # address[]
  spendCaps: [BigInt!]! # uint256[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: String!
}

type PointsProgramOwnershipTransferred @entity(immutable: true) {
  id: String!
  pointsId: String! # address
  newOwner: String! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: String!
}

type PointsSpent @entity(immutable: true) {
  id: String!
  pointsId: String! # address
  ip: String! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: String!
}

type ProtocolFeeClaimantForCampaignSet @entity(immutable: true) {
  id: String!
  incentiveCampaignId: String! # bytes32
  newProtocolFeeClaimant: String! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: String!
}

type ProtocolFeeForCampaignSet @entity(immutable: true) {
  id: String!
  incentiveCampaignId: String! # bytes32
  newProtocolFee: BigInt! # uint64
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: String!
}

type SpendCapsUpdated @entity(immutable: true) {
  id: String!
  pointsId: String! # address
  ips: [String!]! # address[]
  spendCaps: [BigInt!]! # uint256[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: String!
}

type RawPointsProgram @entity(immutable: false) {
  id: String! # <CHAIN_ID>_<POINTS_PROGRAM_ID>
  chainId: BigInt! # Hardcoded
  pointsId: String! # Address identifying the points program
  owner: String! # Points program owner address
  name: String! # string - Points program name 
  symbol: String! # string - Points program symbol
  decimals: Int! # uint8 - Points program decimals
  whitelistedIPs: [RawWhitelistedIP!]! @derivedFrom(field: "rawPointsProgram")
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: String!
}


type RawWhitelistedIP @entity(immutable: false) {
  id: String! # <CHAIN_ID>_<POINTS_PROGRAM_ID>_<IP_ADDRESS>
  rawPointsProgram: RawPointsProgram!
  chainId: BigInt! # Hardcoded
  ip: String! # address - Address of the IP
  spendCap: BigInt! # uint256 - IP's current spend capacity 
}
