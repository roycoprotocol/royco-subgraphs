specVersion: 1.3.0
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum
    name: IncentiveLocker
    network: {{network}}
    source:
      address: "{{sources.0.incentiveLockerAddress}}"
      abi: IncentiveLocker
      startBlock: {{sources.0.incentiveLockerStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      entities:
        - Award
        - CoIPsAdded
        - CoIPsRemoved
        - DefaultProtocolFeeClaimantSet
        - DefaultProtocolFeeSet
        - FeesClaimed
        - IncentiveCampaignCreated
        - IncentivesAdded
        - IncentivesClaimed
        - IncentivesRemoved
        - OwnershipTransferStarted
        - OwnershipTransferred
        - PointsProgramCreated
        - PointsProgramOwnershipTransferred
        - PointsSpent
        - ProtocolFeeClaimantForCampaignSet
        - ProtocolFeeForCampaignSet
        - SpendCapsUpdated
      abis:
        - name: IncentiveLocker
          file: ./abis/IncentiveLocker.json
      eventHandlers:
        - event: Award(indexed address,indexed address,uint256)
          handler: handleAward
        - event: CoIPsAdded(indexed bytes32,address[])
          handler: handleCoIPsAdded
        - event: CoIPsRemoved(indexed bytes32,address[])
          handler: handleCoIPsRemoved
        - event: DefaultProtocolFeeClaimantSet(indexed address)
          handler: handleDefaultProtocolFeeClaimantSet
        - event: DefaultProtocolFeeSet(uint64)
          handler: handleDefaultProtocolFeeSet
        - event: FeesClaimed(indexed address,indexed address,uint256)
          handler: handleFeesClaimed
        - event: IncentiveCampaignCreated(indexed bytes32,indexed address,indexed
            address,bytes,uint64,address[],uint256[])
          handler: handleIncentiveCampaignCreated
        - event: IncentivesAdded(indexed bytes32,indexed address,address[],uint256[])
          handler: handleIncentivesAdded
        - event: IncentivesClaimed(indexed bytes32,indexed address,address[],uint256[],uint256[])
          handler: handleIncentivesClaimed
        - event: IncentivesRemoved(indexed bytes32,indexed address,address[],uint256[])
          handler: handleIncentivesRemoved
        - event: OwnershipTransferStarted(indexed address,indexed address)
          handler: handleOwnershipTransferStarted
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
        - event: PointsProgramCreated(indexed address,indexed address,string,indexed
            string,uint8,address[],uint256[])
          handler: handlePointsProgramCreated
        - event: PointsProgramOwnershipTransferred(indexed address,indexed address)
          handler: handlePointsProgramOwnershipTransferred
        - event: PointsSpent(indexed address,indexed address,uint256)
          handler: handlePointsSpent
        - event: ProtocolFeeClaimantForCampaignSet(indexed bytes32,indexed address)
          handler: handleProtocolFeeClaimantForCampaignSet
        - event: ProtocolFeeForCampaignSet(indexed bytes32,uint64)
          handler: handleProtocolFeeForCampaignSet
        - event: SpendCapsUpdated(indexed address,address[],uint256[])
          handler: handleSpendCapsUpdated
      file: ./src/incentive-locker.ts
#  - kind: ethereum
#    name: UmaMerkleChefAV
#    network: {{network}}
#    source:
#      address: "{{sources.0.umaMerkleChefAVAddress}}"
#      abi: UmaMerkleChefAV
#      startBlock: {{sources.0.umaMerkleChefAVStartBlock}}
#    mapping:
#      kind: ethereum/events
#      apiVersion: 0.0.9
#      language: wasm/assemblyscript
#      entities:
#        - AssertersBlacklisted
#        - AssertersWhitelisted
#        - AssertionLivenessUpdated
#        - BondCurrencyUpdated
#        - IncentiveEmissionRatesUpdated
#        - MerkleRootAsserted
#        - MerkleRootAssertionDisputed
#        - MerkleRootAssertionResolved
#        - UmaMerkleChefAVOwnershipTransferStarted
#        - UmaMerkleChefAVOwnershipTransferred
#      abis:
#        - name: UmaMerkleChefAV
#          file: ./abis/UmaMerkleChefAV.json
#      eventHandlers:
#        - event: AssertersBlacklisted(address[])
#          handler: handleAssertersBlacklisted
#        - event: AssertersWhitelisted(address[])
#          handler: handleAssertersWhitelisted
#        - event: AssertionLivenessUpdated(uint64)
#          handler: handleAssertionLivenessUpdated
#        - event: BondCurrencyUpdated(indexed address)
#          handler: handleBondCurrencyUpdated
#        - event: EmissionRatesUpdated(indexed bytes32,address[],uint256[])
#          handler: handleIncentiveEmissionRatesUpdated
#        - event: MerkleRootAsserted(indexed bytes32,indexed bytes32,indexed address,bytes32)
#          handler: handleMerkleRootAsserted
#        - event: MerkleRootAssertionDisputed(indexed bytes32,bytes32)
#          handler: handleMerkleRootAssertionDisputed
#        - event: MerkleRootAssertionResolved(indexed bytes32,bytes32)
#          handler: handleMerkleRootAssertionResolved
#        - event: OwnershipTransferStarted(indexed address,indexed address)
#          handler: handleOwnershipTransferStarted
#        - event: OwnershipTransferred(indexed address,indexed address)
#          handler: handleOwnershipTransferred
#      file: ./src/uma-merkle-chef-av.ts
#  - kind: ethereum
#    name: MultiplierMarketHub
#    network: {{network}}
#    source:
#      address: "{{sources.0.multiplierMarketHubAddress}}"
#      abi: MultiplierMarketHub
#      startBlock: {{sources.0.multiplierMarketHubStartBlock}}
#    mapping:
#      kind: ethereum/events
#      apiVersion: 0.0.9
#      language: wasm/assemblyscript
#      entities:
#        - APOfferCreated
#        - APOfferFilled
#        - OptedInToIncentiveCampaign
#      abis:
#        - name: MultiplierMarketHub
#          file: ./abis/MultiplierMarketHub.json
#      eventHandlers:
#        - event: APOfferCreated(indexed bytes32,indexed bytes32,indexed address,uint96,uint256)
#          handler: handleAPOfferCreated
#        - event: APOfferFilled(indexed bytes32,indexed bytes32,indexed address,uint96,uint256)
#          handler: handleAPOfferFilled
#        - event: OptedInToIncentiveCampaign(indexed bytes32,indexed address)
#          handler: handleOptedInToIncentiveCampaign
#      file: ./src/multiplier-market-hub.ts
